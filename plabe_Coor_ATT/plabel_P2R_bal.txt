
Namespace(backbone='resnet50', batch_size=32, config='plabel_Transfer_Att/plabel_Transfer_Att.yaml', data_dir='/DB/rhome/yuhaowang/CV_DA/OfficeHomeDataset_10072016', device=device(type='cuda'), early_stop=0, epoch_based_training=False, is_balance=False, lr=0.001, lr_decay=0.75, lr_gamma=0.0003, lr_scheduler=True, momentum=0.9, n_epoch=50, n_iter_per_epoch=300, num_workers=3, seed=1, src_domain='Product', tgt_domain='Real_World', transfer_loss='bnm', transfer_loss_weight=1.0, use_bottleneck=True, weight_decay=0.0005)
balance para is : False
batch_num is  136
/DB/rhome/yuhaowang/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
Epoch: [ 1/50], cls_loss: 3.0217, transfer_loss: -0.1009, total_Loss: 3.6229, test_loss 2.488866, test_acc: 51.6410
Epoch: [ 2/50], cls_loss: 1.6719, transfer_loss: -0.2496, total_Loss: 2.1191, test_loss 1.885956, test_acc: 61.2118
Epoch: [ 3/50], cls_loss: 1.1765, transfer_loss: -0.3604, total_Loss: 1.5108, test_loss 1.523389, test_acc: 67.0186
Epoch: [ 4/50], cls_loss: 0.8827, transEpoch: [ 8/50], cls_loss: 0.4122, transfer_loss: -0.6009, total_Loss: 0.4998, test_loss 0.931393, test_acc: 76.4287
Epoch: [ 9/50], cls_loss: 0.3667, transfer_loss: -0.6271, total_Loss: 0.4273, test_loss 0.895679, test_acc: 77.0484
tensor([ 6., 11., 55., 50.,  3., 13., 54., 28.,  4.,  1., 12., 18., 25.,  4.,
        50., 29., 15., 19.,  8.,  4., 13., 18., 64.,  3., 21.,  9., 17., 26.,
        46., 10., 60., 44.])
Accuracy = 76.15% -> 78.56%

[ 6 11 55 50  3 13 54 28  4  1 12 18 25  4 50  7 15 19  8  4 13 18 64  3
 21  9 17 30 46 13 60 38]
len of dataloader 136
Epoch: [10/50], cls_loss: 0.3299, transfer_loss: -0.6484, total_Loss: 0.8287, test_loss 0.808360, test_acc: 78.9075
tensor([20., 44., 61., 16., 20., 53., 54., 59., 29., 38., 53., 50.,  6., 43.,
        53., 47., 61., 19., 57., 14., 15., 62., 21., 50.,  0., 58., 62., 55.,
         2., 19.,  8., 57.])
Accuracy = 78.17% -> 79.23%

[20 44 46 33 44 53 54 59 32 49 53 50  6 43 53 47 15 19 57 14 31 35 21 50
  0 34 62 55  2 19  8 57]
len of dataloader 136
Epoch: [11/50], cls_loss: 0.2890, transfer_loss: -0.6845, total_Loss: 0.6678, test_loss 0.771464, test_acc: 79.4813
tensor([17., 12., 13.,  7., 22., 42., 54., 29., 41.,  9., 48., 45., 58., 59.,
        49., 36., 21., 58., 16.,  9., 17., 35., 34., 28.,  8.,  9., 62., 37.,
        54.,  7., 18., 14.])
Accuracy = 79.69% -> 79.85%

[17 12 13  7 22 33 54 29 62  9 48 62 58 10 38 56 21 47 16  9 33 35 34 28
  8  9 62 37 54  7 18 14]
len of dataloader 136
Epoch: [12/50], cls_loss: 0.2649, transfer_loss: -0.7104, total_Loss: 0.5610, test_loss 0.744846, test_acc: 80.3535
tensor([17., 62., 31., 21., 63., 29.,  6., 54., 53., 16., 54., 18., 58., 48.,
        31., 21., 49., 45., 16., 14., 19., 42., 40., 49.,  8.,  2., 18., 48.,
        55., 15., 61., 28.])
Accuracy = 79.69% -> 79.99%

[33 62 31 61 63 29  6 54 53 16 54 18 34 48 31 21 49 45 43 14 19 42 40 49
  8 49 18 48 55 15 61 28]
len of dataloader 136
Epoch: [13/50], cls_loss: 0.2448, transfer_loss: -0.7238, total_Loss: 0.4988, test_loss 0.750854, test_acc: 80.5600
tensor([15., 51., 19., 32., 31., 37., 21., 40., 17., 29., 14., 49., 26., 63.,
        32., 17., 32., 10., 49., 36.,  0., 52.,  3., 11.,  6.,  5., 38., 48.,
        28., 10., 31., 18.])
Accuracy = 80.58% -> 80.61%

[15 26 30 32 31 37 21 40 17 29 14 49 30 63 32 17 32 10 38 36  0 11  3 38
  6 55 38 48 28 10 31 18]
len of dataloader 136
Epoch: [14/50], cls_loss: 0.2239, transfer_loss: -0.7320, total_Loss: 0.4450, test_loss 0.749991, test_acc: 80.9272
tensor([ 3.,  6., 41., 19., 25., 12., 41., 36.,  0., 46., 17., 41., 27., 48.,
        50., 34.,  5., 54., 34., 55., 17., 12., 46., 23.,  2., 12., 26.,  4.,
        26.,  2.,  9., 28.])
Accuracy = 80.61% -> 80.56%

[ 3  6 41 12 25 12 58 36  0 46 17 41 27 48 50 12  5 54 34 55 17 12 42 11
  2 29 26  4 26  2  9 28]
len of dataloader 136
Epoch: [15/50], cls_loss: 0.2097, transfer_loss: -0.7503, total_Loss: 0.3879, test_loss 0.749909, test_acc: 80.9502
tensor([ 0.,  1., 35.,  0., 21., 48.,  5., 60., 61., 30.,  5.,  4., 10.,  1.,
         0., 52., 49.,  3., 24.,  9., 44.,  5., 43., 63.,  4.,  9., 64., 46.,
        55., 58., 10., 23.])
Accuracy = 80.61% -> 80.79%

[ 0  1 15  0 21 48  5  7 61 30  5  4 59  1  0 52 49  3 24  9 23  5 43 63
  4  9 15 26 55 58 38 23]
len of dataloader 136
Epoch: [16/50], cls_loss: 0.1897, transfer_loss: -0.7646, total_Loss: 0.3227, test_loss 0.749484, test_acc: 81.3863
tensor([34., 10., 18., 35., 44., 36., 26., 41., 28., 35.,  4., 24., 15., 34.,
        53., 27., 10., 52., 30., 63., 59., 61., 13., 39., 30., 59., 21., 13.,
        30., 36., 42.,  0.])
Accuracy = 80.84% -> 80.74%

[58 57 18 35 42 36 26 41 28 35  4 24 15 34 53 31 10 52 30 63 31 42 53 39
 30 59 21  3 30 36 42  0]
len of dataloader 136
Epoch: [17/50], cls_loss: 0.1799, transfer_loss: -0.7708, total_Loss: 0.2831, test_loss 0.774950, test_acc: 81.3633
tensor([ 6., 12., 11., 64., 47.,  2., 61., 21., 28., 10., 13., 29.,  8.,  8.,
        23., 21., 12., 53., 23., 32., 16., 37.,  9., 44., 52., 20., 14., 18.,
        22., 63., 34.,  1.])
Accuracy = 80.72% -> 80.95%

[ 6 32 11 64 47  2 24 21 27 10 13 29  8  8 23 21 12 53 18 32 16 37  9 23
 20 20 14 18 22 63 34  1]
len of dataloader 136
Epoch: [18/50], cls_loss: 0.1646, transfer_loss: -0.7771, total_Loss: 0.2562, test_loss 0.771470, test_acc: 81.5928
tensor([61.,  1., 52., 24., 29., 31., 45.,  2., 25., 25., 19., 11.,  9., 41.,
        26., 48., 43., 64., 59., 29.,  0., 44., 10., 21., 12.,  2., 27., 61.,
        49., 31., 55., 10.])
Accuracy = 80.79% -> 80.72%

[61  1 40 24 23 31 45  2 25 25 41  6  9 41 26 48 42 64 59 29  0  8 10 21
 12  2 27 61 49 31 55 10]
len of dataloader 136
Epoch: [19/50], cls_loss: 0.1565, transfer_loss: -0.7851, total_Loss: 0.2081, test_loss 0.804015, test_acc: 81.3633
tensor([50., 49.,  7., 18., 53., 26., 43., 10.,  6., 54., 62., 44.,  6., 59.,
         8., 25., 17., 41., 63., 33., 43., 16., 23., 45.,  8., 52., 28., 50.,
        44., 52.,  0.,  8.])
Accuracy = 80.81% -> 80.88%

[43 49  7 18 53 26 43 10  6 54 17 44  6 52  8 25 17 41 63 43 43 42 23 45
  8 52 28 50 44 62  0  8]
len of dataloader 136
Epoch: [20/50], cls_loss: 0.1389, transfer_loss: -0.7925, total_Loss: 0.1743, test_loss 0.809039, test_acc: 81.5240
tensor([61., 10., 14., 46., 22., 41.,  6., 45., 32., 15.,  1., 25.,  9., 60.,
        25., 53., 19.,  5., 10., 56., 11., 42., 61., 31., 56., 56., 13., 63.,
        43., 61., 19., 44.])
Accuracy = 80.95% -> 81.09%

[61 10 14 46 22 64 59 45 32 15  1 25  9 60 25 53 30  5 13 56 52 42 33 38
 56 56 13 63 43 61 19 35]
len of dataloader 136
Epoch: [21/50], cls_loss: 0.1331, transfer_loss: -0.7951, total_Loss: 0.1510, test_loss 0.814568, test_acc: 81.6387
tensor([50.,  7., 14., 21., 12., 60., 61., 56., 61.,  8.,  1., 14.,  7.,  9.,
        20., 44., 41., 46., 12., 27., 57., 22., 46.,  5., 62., 19., 15., 41.,
        21., 43., 39.,  7.])
Accuracy = 81.11% -> 81.14%

[50  7 14 57 12 60 24 64 61  8  1 14  7  9 20 23 41 26 29 27 57 22 46  5
 62 19 31 46 21 43 39  7]
len of dataloader 136
Epoch: [22/50], cls_loss: 0.1248, transfer_loss: -0.8019, total_Loss: 0.1219, test_loss 0.830634, test_acc: 81.5699
tensor([58., 16., 47., 29., 27., 31., 31., 22., 62., 30., 20.,  0.,  3., 50.,
        23., 15., 14., 47., 10., 17.,  1., 39., 38., 34., 40., 13., 16., 26.,
        11., 43., 32., 11.])
Accuracy = 81.16% -> 81.11%

[39 51 47 29 27 31 31 22 62 30 20  0  3 50 23 15 14 47 10 42  1 39 23 34
  6 13 16 26 52 43 32 38]
len of dataloader 136
Epoch: [23/50], cls_loss: 0.1176, transfer_loss: -0.8054, total_Loss: 0.0966, test_loss 0.842945, test_acc: 81.5469
tensor([38., 42., 31., 46., 59., 38., 51., 61., 12., 19., 57., 22., 48., 46.,
         0., 50., 39., 37., 40., 12., 15., 64., 42., 41., 53., 41.,  9., 56.,
        22.,  5., 46., 62.])
Accuracy = 81.16% -> 81.11%

[38 42 31 62 59 38 51 42 34 19 57 22 48 46  0 50 52 37 40 32 15 64 42 41
 53 41  9 56 22  5 46 57]
len of dataloader 136
Epoch: [24/50], cls_loss: 0.1166, transfer_loss: -0.8085, total_Loss: 0.0888, test_loss 0.848566, test_acc: 81.6158
tensor([11.,  3., 51., 37., 54.,  3., 57.,  6.,  8., 29., 35.,  7., 23., 14.,
        17., 19., 24., 51.,  8.,  8.,  9., 56., 12., 46., 26., 30., 46., 11.,
        31., 43., 38., 53.])
Accuracy = 81.07% -> 81.00%

[11  3 51 37 54  3 57 35  8 29 35 29 11 14 17 19 15 51  8  8  9 56 12 46
 26 30 26 52 31 61 38 53]
len of dataloader 136
Epoch: [25/50], cls_loss: 0.1046, transfer_loss: -0.8138, total_Loss: 0.0563, test_loss 0.855064, test_acc: 81.4781
tensor([16., 36., 39., 44.,  3., 31., 29., 24.,  7., 49., 43., 29.,  7., 11.,
        38., 42., 59., 19., 62., 60., 31., 19., 45., 51., 36., 19.,  0., 59.,
         5., 48., 57.,  1.])
Accuracy = 81.07% -> 80.95%

[16 36  9 23  3 31 29 15  7 49 43 29  7 52 14 42 59 19 62 60  3 57 45 51
 36 19  0 59 55 48 57  1]
len of dataloader 136
Epoch: [26/50], cls_loss: 0.1079, transfer_loss: -0.8129, total_Loss: 0.0487, test_loss 0.869726, test_acc: 81.4781
tensor([27., 42., 54., 22., 37., 26., 55., 32., 59.,  1., 19., 12., 43.,  1.,
        30., 34., 23., 47., 46., 23., 31., 16., 14., 62., 59., 21., 60., 60.,
        51., 44., 41., 41.])
Accuracy = 81.09% -> 80.91%

[27 42 54 22 37 26 55 29 59  1 12 29 43  1 30 34 10 47 44 23 31 16 14 62
 59 21 60 60 51 23 41 41]
len of dataloader 136
Epoch: [27/50], cls_loss: 0.0998, transfer_loss: -0.8180, total_Loss: 0.0246, test_loss 0.917626, test_acc: 81.2715
tensor([33., 10.,  7.,  2., 50., 25., 63., 59., 34., 61., 56., 31., 20.,  4.,
        32.,  3., 53., 47.,  3., 46., 44.,  8.,  1., 20., 38., 41., 22., 36.,
         5., 15.,  6.,  5.])
Accuracy = 81.20% -> 81.18%

[33 10  7  2 50 25 63 59 58 61 56 31 20  4 32  3 53 47  3 46 44  8  1 20
 38 49 22 36  5 15  6  5]
len of dataloader 136
Epoch: [28/50], cls_loss: 0.0954, transfer_loss: -0.8226, total_Loss: 0.0083, test_loss 0.931519, test_acc: 81.3174
tensor([ 3., 30., 48.,  5.,  7., 55., 41., 15., 22., 42., 31., 44., 53., 37.,
        20., 35., 17., 34., 24.,  6., 48.,  1.,  6., 14., 48., 64., 11., 30.,
        20., 45., 20., 32.])
Accuracy = 81.04% -> 81.02%

[ 3 30 48  5  7 55 49 31 22 33 31 38 40 37 20 35 17 34 57  6 48  1  5 14
 48 64 17 30 20 45 20 32]
len of dataloader 136
Epoch: [29/50], cls_loss: 0.0896, transfer_loss: -0.8268, total_Loss: -0.0169, test_loss 0.935385, test_acc: 81.3863
tensor([37., 64., 33., 23., 52., 28., 48.,  8., 17., 52., 55., 53., 62., 38.,
        18.,  5., 11., 34., 43., 37., 30., 33., 32., 29., 56., 33., 20., 52.,
        47., 40.,  8., 60.])
Accuracy = 81.18% -> 81.07%

[37 64  2 23 52 15 48  8 17 52 55 53 62  8 18  5 11 34 43 37 30 33 32 32
 56  2 20 59 56 40  8  7]
len of dataloader 136
Epoch: [30/50], cls_loss: 0.0868, transfer_loss: -0.8212, total_Loss: -0.0120, test_loss 0.948564, test_acc: 81.4781
tensor([ 3., 22., 34., 13., 39., 11., 30., 33.,  2., 18., 29., 64., 62., 22.,
        54., 21., 61., 24.,  1.,  3., 14.,  5.,  1., 32., 38., 60., 44., 60.,
        63., 63., 22., 57.])
Accuracy = 81.16% -> 81.09%

[63 22 34 52  9 11 30 33  2 18 29 64 62 22 54 21 61 57  1 52 14  5  1 32
 44 60 23 60 63 63 22 57]
len of dataloader 136
Epoch: [31/50], cls_loss: 0.0830, transfer_loss: -0.8227, total_Loss: -0.0384, test_loss 0.959655, test_acc: 81.2486
tensor([13., 36., 42., 28., 37., 28., 29., 43.,  1., 63., 10.,  1., 30., 18.,
        57.,  1., 62., 55., 54., 52., 38.,  3., 17., 28., 37., 61., 11., 51.,
        13.,  9., 14., 55.])
Accuracy = 81.04% -> 81.02%

[13 36 33 28 37 28 29 43  1 48 10  1 30 18 57  1 62 55 54 11 38  3 17 28
 37 61 11 51 13  9 14 55]
len of dataloader 136
Epoch: [32/50], cls_loss: 0.0750, transfer_loss: -0.8252, total_Loss: -0.0517, test_loss 0.967088, test_acc: 81.3863
tensor([36., 32., 13., 42.,  4., 62.,  1., 42., 27., 56., 35.,  9., 25., 52.,
        44.,  4., 64., 53., 30., 34., 23., 45., 24., 43., 32., 18., 16., 29.,
        40., 32., 33., 32.])
Accuracy = 80.86% -> 80.95%

[36 32 13 33  4 62  1 43 27 56 35  9 25 52 23  4 64 53 30 34 11 45 24 43
 32 18 16 29 40 32  2 32]
len of dataloader 136
Epoch: [33/50], cls_loss: 0.0764, transfer_loss: -0.8285, total_Loss: -0.0624, test_loss 0.960726, test_acc: 81.3404
tensor([55., 56., 19., 49., 22., 24., 47., 41., 45., 32., 60., 43., 43., 23.,
        34.,  3., 13., 55., 62., 39., 17., 33.,  3., 32.,  0., 32., 56., 27.,
        28., 18., 13., 52.])
Accuracy = 81.14% -> 81.09%

[55 64 19 49 22 24 47 41 45 32  7 43 43 48 12  3 13 55 62 39 17  2  3 32
  0 32 56 27 28 18  3 52]
len of dataloader 136
Epoch: [34/50], cls_loss: 0.0757, transfer_loss: -0.8267, total_Loss: -0.0667, test_loss 0.991036, test_acc: 81.3633
tensor([43., 60., 54., 16., 30., 53., 24.,  0.,  4., 24., 10.,  9., 62.,  9.,
         4.,  4., 63., 25., 50., 52., 56., 10., 46., 22., 28., 31., 15., 30.,
        29., 25., 37.,  4.])
Accuracy = 81.02% -> 81.02%

[43  7 54 16 30 20 24  0  4 57 13  9 62  9  4  4 63 25 50 52 56 13 46 22
 28 31 15 30 29 25 37  4]
len of dataloader 136
Epoch: [35/50], cls_loss: 0.0705, transfer_loss: -0.8333, total_Loss: -0.0916, test_loss 0.980881, test_acc: 81.3633
tensor([34.,  0., 61., 50., 60., 51., 21., 21.,  5., 37.,  5., 11., 17.,  2.,
        10., 50., 14., 23., 29., 63., 13., 31.,  7., 52.,  9., 43., 46.,  4.,
        47., 27., 45., 38.])
Accuracy = 81.16% -> 81.25%

[47  0 61 50 64 51 21 21 55 37 55 38 17  2 10 50 14 48 29 63  3 31  7 12
  9 42 46  4 56 27 45 11]
len of dataloader 136
Epoch: [36/50], cls_loss: 0.0666, transfer_loss: -0.8347, total_Loss: -0.1081, test_loss 1.009470, test_acc: 81.1797
tensor([31., 61., 30., 26., 24., 23.,  7., 62., 21., 62., 31., 36., 34., 41.,
        15., 20.,  9., 27., 10., 29., 20., 61., 61., 24., 50., 12., 24., 34.,
         7., 50., 50., 12.])
Accuracy = 81.04% -> 81.16%

[31 61 30 26 18 23  7 62 21 62 31 36 29 41 15 20  9 27 13 29 20 61 61 24
 50 29 30 58  7 50 50 12]
len of dataloader 136
Epoch: [37/50], cls_loss: 0.0689, transfer_loss: -0.8356, total_Loss: -0.1172, test_loss 1.004553, test_acc: 81.3174
tensor([60., 31.,  7., 54., 54., 41.,  9., 63.,  9.,  1., 42., 48.,  9., 15.,
        35., 18., 21., 62., 15., 46., 50., 27., 53., 28., 26., 22., 56.,  2.,
        23., 33.,  1., 32.])
Accuracy = 81.20% -> 81.30%

[37 31  7 54 54 49  9 63  9  1 42 48  9 15 35 18 21 62 15 46 50 27 53 28
 26 22 56  2 23 43  1 12]
len of dataloader 136
Epoch: [38/50], cls_loss: 0.0671, transfer_loss: -0.8363, total_Loss: -0.1215, test_loss 1.018721, test_acc: 81.5010
tensor([10.,  9., 40.,  8., 50.,  7.,  2., 42., 46., 28., 11., 24., 14., 15.,
        39., 61., 55., 28., 16., 48., 34., 38., 52.,  7., 47., 19., 62., 59.,
        58., 58., 41., 45.])
Accuracy = 81.14% -> 81.09%

[10  6 40  8 50  7  2 33 46 25  2 24 14 15 39 61  5 28 26 48 34 44 52  7
 47 15 62 59 34 58 41 45]
len of dataloader 136
Epoch: [39/50], cls_loss: 0.0604, transfer_loss: -0.8335, total_Loss: -0.1383, test_loss 1.033848, test_acc: 81.3404
tensor([62., 41.,  5., 15., 51.,  8., 50., 34., 53., 47., 55., 23.,  0., 55.,
        11., 52.,  7., 26., 19., 49.,  5., 58., 38., 48., 39., 13., 53., 48.,
         9., 62., 14.,  5.])
Accuracy = 81.09% -> 81.16%

[62 41 55 15 51  8 50 32 53 47 55 23  0 55 11 52  7 26 19 49  5 58 23 39
 39 13 52 48  9 62 14  5]
len of dataloader 136
Epoch: [40/50], cls_loss: 0.0572, transfer_loss: -0.8357, total_Loss: -0.1434, test_loss 1.040285, test_acc: 81.4781
tensor([21., 47., 61.,  4., 48.,  1., 10., 41.,  5., 49., 11., 55., 48.,  6.,
        18., 29., 50., 43., 18.,  0.,  8., 48., 47., 56., 26., 16., 19.,  0.,
        60., 42.,  4., 15.])
Accuracy = 81.07% -> 81.09%

[25 47 61  4 48  1 13 41  5 49 35 55 52  6 18 29 50 42 18  0  8 48 47 56
 26 16 19  0 60 42  4 15]
len of dataloader 136
Epoch: [41/50], cls_loss: 0.0593, transfer_loss: -0.8362, total_Loss: -0.1586, test_loss 1.040874, test_acc: 81.3404
tensor([57., 35., 43.,  7.,  0., 40., 42., 32., 56., 36., 46.,  8.,  1., 46.,
        13.,  3.,  2., 11., 36.,  0.,  1., 35.,  6., 41., 40., 26., 63.,  9.,
        39., 38., 39., 29.])
Accuracy = 81.09% -> 81.20%

[57 35 61  7  0 40 42 32 56 36 46  8  1 46 13  3 55 38 36  0  1 35  6 41
  6 26 63  9  9 38 39  7]
len of dataloader 136
Epoch: [42/50], cls_loss: 0.0573, transfer_loss: -0.8442, total_Loss: -0.1731, test_loss  nan, test_acc: 81.3404
tensor([47., 29., 38., 47., 39., 52.,  3.,  6., 56., 64., 11.,  0., 53., 11.,
        30., 51., 17., 39., 61., 32., 60., 20., 22., 27., 21., 55., 56.,  0.,
        60., 23., 11., 22.])
Accuracy = 81.16% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [43/50], cls_loss: 0.3620, transfer_loss: -0.6507, total_Loss: 2.3515, test_loss 1.549178, test_acc: 58.6872
tensor([64., 27., 42., 56., 32.,  1.,  6., 56., 12., 59., 60., 29., 38.,  5.,
         9., 45., 60., 12., 62., 12., 54., 20.,  4., 11., 19.,  0.,  2., 44.,
        18., 42., 11., 18.])
Accuracy = 60.64% -> 81.20%

[64 27 42 56 32  1  6 56 12 59 64 29 38 55  9 45 60 12 62 32 54 20  4 11
 19  0 55 23 18 42 38 18]
len of dataloader 136
Epoch: [44/50], cls_loss: 0.0980, transfer_loss: -0.7819, total_Loss: 0.0091, test_loss 1.030689, test_acc: 81.2256
tensor([54., 38., 50., 37., 52., 42., 41., 38., 53., 32., 62.,  0., 55., 15.,
         7., 22.,  3.,  0., 45.,  8., 17., 27., 53., 48., 30.,  6., 63., 29.,
         9., 53., 51., 52.])
Accuracy = 81.20% -> 81.20%

[54 38 50 37 52 33 41 23 20 32 62  0 55 15  7 22  3  0 45  8 43 27 53 48
 61  6 63 29  9 53 42  5]
len of dataloader 136
Epoch: [45/50], cls_loss: 0.0540, transfer_loss: -0.8309, total_Loss: -0.1706, test_loss  nan, test_acc: 81.2486
tensor([23., 25., 64., 58., 60., 49.,  9., 24., 25.,  2., 10., 12.,  7., 60.,
        27., 34., 52., 22.,  5., 54.,  2., 31.,  1.,  1., 29., 52., 10., 37.,
        26., 61.,  8., 57.])
Accuracy = 81.07% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [46/50], cls_loss: 0.3367, transfer_loss: -0.5984, total_Loss: 1.4691, test_loss  nan, test_acc: 53.6837
tensor([49., 48., 57.,  7., 60., 59., 51.,  9., 27., 10.,  4., 36., 63., 57.,
         0.,  7., 11.,  0., 31.,  2.,  4., 38.,  2., 27., 50.,  1., 52., 21.,
        33., 17., 47., 30.])
Accuracy = 55.79% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [47/50], cls_loss: 0.3435, transfer_loss: -0.4973, total_Loss: 0.9218, test_loss  nan, test_acc: 49.6213
tensor([14., 31., 41.,  4., 29., 49., 30., 30., 62.,  7., 54., 32., 34., 52.,
        34., 10., 57.,  9.,  1., 27., 15., 18., 23., 50., 64., 48., 50.,  4.,
        32., 52., 19., 60.])
Accuracy = 51.59% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [48/50], cls_loss: 0.3015, transfer_loss: -0.4686, total_Loss: 0.8401, test_loss  nan, test_acc: 47.6934
tensor([57., 56.,  5.,  3., 44.,  5., 21.,  1., 30., 43., 62., 34., 23., 44.,
        62., 43.,  9., 29., 35., 59.,  3., 28., 42., 58., 26., 17., 10., 25.,
        13., 18., 60., 54.])
Accuracy = 49.10% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [49/50], cls_loss: 0.2749, transfer_loss: -0.4452, total_Loss: 0.7830, test_loss  nan, test_acc: 44.2047
tensor([10., 59., 31., 50.,  6., 11., 10., 59.,  9., 14., 34., 22., 34.,  6.,
        30., 47., 45., 52., 37., 16.,  4., 48., 57., 44., 60., 31., 31., 38.,
         8., 43.,  0., 22.])
Accuracy = 45.73% -> 1.98%

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
len of dataloader 136
Epoch: [50/50], cls_loss: 0.2611, transfer_loss: -0.4283, total_Loss: 0.7523, test_loss  nan, test_acc: 40.1423
Transfer result: 81.6387
